//ÖDEV SORULARI
/*
	1.Soru-> İki adet Matris oluşturup, bu iki matrisi çarparak yeni bir matris oluşturma.
		1	2	3			1	2	3		30	36	42
		4	5	6			4	5	6		
		7	8	9			7	8	9
	2.Soru-> Tek boyutlu oluşturulan bir matrisi kullanıcıdan alınan satır ve sütun sayısına göre iki boyutlu matrise çevirme.
		1 2 3 4 5 6 7 8-> satır=4,sütun=2
		1 2
		3 4
		5 6
		7 8		
	3.Soru-> Oluşturulan matrisin simetrik olup olmadığını sorgulama.
		1 2 3
		2 1 2
		3 2 1
	4.Soru-> Seçmeli Sıralama algoritması ile , rastgele oluşturulan dizinin sıralanması.
	5.Soru-> İkili Arama algoritması ile, rastgele oluşturulan dizide değer arama.
*/
	

	//1.SORU	
/*	
	A00 A01 A02		C00=A00*B00+A01*B10+A02*B20
	A10	A11	A12		C01=A00*B01+A01*B11+A02*B21
	A20	A21	A22		C02=A00*B02+A01*B12+A02*B22
	
	B00	B01	B02		C10=A10*B00+A11*B10+A12*B20
	B10	B11	B12
	B20	B21	B22
	
	C00 C01 C02
	C10 C11 C12
	C20 C21 C22

	int matrisA[5][5],matrisB[5][5],sonucMatris[5][5],i,j,k,toplam;
	srand(time(NULL));
	printf("Ilk matris:\n");
	for(i=0;i<5;i++){
		for(j=0;j<5;j++){
			matrisA[i][j]=rand()%5;//RASTGELE DEGER ATAMA
			matrisB[i][j]=rand()%5;
			printf("%d\t",matrisA[i][j]);//ILK MATRİSİ YAZDIRDIM
		}
		printf("\n");
	}
	printf("Ikinci matris:\n");
	for(i=0;i<5;i++){
		for(j=0;j<5;j++){
			printf("%d\t",matrisB[i][j]);//IKINCİ MATRİSİ YAZDIRDIM
		}
		printf("\n");
	}
	printf("Sonuc matris:\n");
	for(i=0;i<5;i++){
		for(j=0;j<5;j++){
			toplam=0;
			for(k=0;k<5;k++){
				toplam+=matrisA[i][k]*matrisB[k][j];
			}
			sonucMatris[i][j]=toplam;
			printf("%d\t",sonucMatris[i][j]);
		}
		printf("\n");
	}
*/

	//2.SORU
/*	1 2 3 4 5 6 7 8 9 10 11 12 -> 4 SATIR 3 SUTUN
	0 1 2 3 4 5 6 7 8 9 10 11
	00 01 02 
	10 11 12
	20 21 22 
	30 31 32
	
	
int dizi[12],satir,sutun,i,j;
	srand(time(NULL));
	for(i=0;i<12;i++){
		dizi[i]=rand()%100;
		printf("%d ",dizi[i]);
	}
	printf("\nLutfen satir ve sutun sayisini giriniz:");
	scanf("%d%d",&satir,&sutun);
	int ikiBoyutluDizi[satir][sutun];
	for(i=0;i<satir;i++){
		for(j=0;j<sutun;j++){
			ikiBoyutluDizi[i][j]=dizi[sutun*i+j];
			printf("%d\t",ikiBoyutluDizi[i][j]);
		}
		printf("\n");
	}*/
	
	//3.SORU
/*	int ikiBoyutluDizi[3][3]={{1,3,3},{2,1,3},{3,3,1}},i,j,sorgu=0;//esit.
	printf("Ilk matris:\n");
	for(i=0;i<3;i++){
		for(j=0;j<3;j++){
			printf("%d\t",ikiBoyutluDizi[i][j]);//ILK MATRİSİ YAZDIRDIM
		}
		printf("\n");
	}
	for(i=0;i<3;i++){
		for(j=0;j<3;j++){
			if(ikiBoyutluDizi[i][j]!=ikiBoyutluDizi[j][i]){
				sorgu=1;
				break;
			}
		}
	}
	
	if(sorgu){
		printf("Girdiginiz dizi simetrik degildir.");
	}
	else{
		printf("Simetriktir.");
	}

//4.SORU
	
	/*7 3 5 8 2 9 4 15 6-->sirasiz hali
	
	2 3 5 8 7 9 4 15 6->2 ile 7 yer değiştirildi.
	2 3 5 8 7 9 4 15 6->-
	2 3 4 8 7 9 5 15 6->4 ile 5 yer değiştiirldi.
	2 3 4 5 7 9 8 15 6->5 ile 8 yer değiştşrildi.
	2 3 4 5 6 9 8 15 7->6 ile 7 yer değiştirildi.
	2 3 4 5 6 7 8 15 9->7ile 9 yer değiştşrildi.
	2 3 4 5 6 7 8 15 9->-
	2 3 4 5 6 7 8 9 15 ->9 ile 15 yer değiştirildi.
	2 3 4 5 6 7 8 9 15 ->son hali.
	
	int dizi[10],i,j,indexKucukSayi,enKucukSayi;
	srand(time(NULL));
	printf("Sirasiz dizi:");
	for(i=0;i<10;i++){
		dizi[i]=rand()%100;
		printf("%d ",dizi[i]);
	}
	printf("\n");
	for(i=0;i<9;i++){
		enKucukSayi=dizi[9];
		indexKucukSayi=9;
		for(j=i;j<9;j++){
			if(dizi[j]<enKucukSayi){
				enKucukSayi=dizi[j];
				indexKucukSayi=j;
			}
		}
		printf("%d sayisi ile %d sayisi yer degisitirildi.\n",enKucukSayi,dizi[i]);
		dizi[indexKucukSayi]=dizi[i];
		dizi[i]=enKucukSayi;
	}
	printf("Sirali dizi:");
	for(i=0;i<10;i++){
		printf("%d ",dizi[i]);
	}
*/
	
	//5.SORU
/*	
	int ortanca,sol,sag,aradiginizSayi,bulunduMu=0;
	printf("\nLutfen aradiginiz sayiyi giriniz:");
	scanf("%d",&aradiginizSayi);
	sol=0;//index numaraları.
	sag=9;
	while(sol<=sag){
		ortanca=(sag+sol)/2;
		if(aradiginizSayi==dizi[ortanca]){
			bulunduMu=1;
			break;
		}
		else if(aradiginizSayi>dizi[ortanca]){
			sol=ortanca+1;
		}
		else{
			sag=ortanca-1;		
		}	
	}
	if(bulunduMu){
		printf("%d sayisi dizide bulunmustur.",aradiginizSayi);
	}
	else{
		printf("%d sayisi dizide bulunamamistir",aradiginizSayi);
	}
*/